This file discribes what was done at each checkpoint.

Checkpoint #1:
This was just marking the creation of the repo.

Checkpoint #2:
At this point, I had only defined subtraction. I spent most of the time before
this thinking about the problem and what I needed to do for it. My goal for the
next ckpt was to define division and mod.

Checkpoint #3:
I defined =?, /, and %. I also started working on dividing out factors into 
lists. I now can take a list and a factor and if it is evenly divisible, I can
pull out one instance of that factor and add it to a list. 
ie [ 8 ] 2 = [ 4 , 2 ] or [ 8 , 2 ] 2 = [ 4 , 2 , 2 ]

I also have a safe version of this ( ie. [ 5 ] 2 = [ 5 ] ) but I'm not sure
that this is a function that will actually be needed or it it's functionality
will be incorporated elsewhere.

My goal for the next ckpt is to be able to divide all of the same kind of 
factors out. ( ie. [ 8 ] 2 = [ 2 , 2 , 2 ]

Checkpoint #4:
I defined divallout which divides all instances of a factor out of a number. 
Despite my best efforts, I was unable to get it working without using 
{-# TERMINATING #-}. I spent several hours trying to get Agda to recognize
that it would terminate, but was unable. I think there must be some problem
with my nested conditional cases and Agda not realizing that eventually, no
matter how large the number, if you keep dividing out factors, it will reach a
point where a number divided by a factor will equal either 0 or 1. These are
technically the base cases of my recursion, but they don't take the normal
straight forward form that most of the examples in class have, so I don't 
think Agda is able to recognize them for what they are.

In trying to work out how to get Agda to accept my definition of divallout
without the terminating pragma, I ended up encorporating the two definitions
for pulling out single factors into it. These are where the nested 
conditionals come from.

At some point, I may revisit divallout's definition. However, at this point,
I need to move on.

My next goal is to to be able to factor all factors out 
ie. trialdiv 30 = [ 5 , 3 , 2 ]

Checkpoint #5:
I just realized that I need to commit and push regular changes before I make 
the tag corresponding to them or the tag will attach to the previous commit.

This ckpt is just me making sure my tags line up from here on out.   


